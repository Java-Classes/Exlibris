//
// Copyright 2018, TeamDev Ltd. All rights reserved.
//
// Redistribution and use in source and/or binary forms, with or without
// modification, must retain the above copyright notice and the following
// disclaimer.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//

syntax = "proto3";

package javaclasses.exlibris;

import "spine/options.proto";

option (type_url_prefix) = "type.javaclasses.exlibris";
option java_package = "javaclasses.exlibris";
option java_outer_classname = "IdentifiersProto";
option java_multiple_files = true;
option java_generate_equals_and_hash = true;

import "spine/net/email_address.proto";
import "javaclasses/exlibris/values.proto";

// The identifier of a book in a library.
//
message BookId {

    // The ISBN converted with the base62 algorithm.
    Isbn62 isbn62 = 1;
}

// The identifier of a user.
//
message UserId {

    // Represented by user e-mail address.
    spine.net.EmailAddress email = 1;
}

// The identifier of a inventory.
//
// Represented by `BookId`.
//
message InventoryId {

    // The identifier of a book.
    BookId book_id = 1;
}

// The identifier of an inventory item.
//
// Represented by `BookId` and an item number.
//
message InventoryItemId {

    // The identifier of a book.
    BookId book_id = 1;

    // The sequential number entered by a librarian.
    int32 item_number = 2;
}

// The identifier of a loan.
//
// Based on the date of creation.
//
message LoanId {

    // The automatically generated identifier based on a date of the creation.
    //
    // Maybe `currentTimeMillis`.
    int64 value = 1;
}

// The identifier of books that are expected in the library.
//
message ExpectedSoonBooksListViewId {

    // String representation of UUID.
    //
    string value = 1;
}

// The identifier of each readaer's event.
//
message ReaderEventLogViewId {

    // String representation of UUID.
    //
    string value = 1;
}

// The identifier of a reader's loan.
//
message ReaderLoanViewId {

    // The identifier of a user.
    UserId user_id = 1;

    // The identifier of a loan period.
    LoanId loan_id = 2;
}

// The identifier of a one book reservation.
//
message BookReservationViewId {

    // The identifier of a book.
    BookId book_id = 1;

    // The identifier of a user.
    UserId user_id = 2;
}

// The identifier of of a one loan view.
//
message BookLoanViewId {

    // String representation of UUID.
    //
    string value = 1;
}

// The identifier of a one action with book.
//
message BookEventLogViewId {

    // String representation of UUID.
    //
    string value = 1;
}

// The identifier of a reservation queue process manager.
//
message ReservationQueueId {

    // String representation of UUID.
    //
    string value = 1;
}

//
// Copyright 2018, TeamDev Ltd. All rights reserved.
//
// Redistribution and use in source and/or binary forms, with or without
// modification, must retain the above copyright notice and the following
// disclaimer.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//

syntax = "proto3";

package javaclasses.exlibris.q;

import "spine/options.proto";

option (type_url_prefix) = "type.javaclasses.exlibris";
option java_package = "javaclasses.exlibris.q";
option java_outer_classname = "ValuesProjectionsProto";
option java_multiple_files = true;
option java_generate_equals_and_hash = true;

import "google/protobuf/timestamp.proto";
import "spine/net/url.proto";
import "javaclasses/exlibris/identifiers.proto";
import "javaclasses/exlibris/values.proto";

// Information about a book.
// Contains authors, categories, and a status.
//
message BookItem {

    // The identifier of a book.
    BookId book_id = 1;

    // The book cover.
    spine.net.Url book_cover_url = 2;

    // The book title.
    BookTitle title = 3;

    // Categories of a book.
    repeated Category categories = 4;

    // Authors’ full names.
    AuthorName author = 5;

    // The book can has one of the following status:
    //
    // 1. Borrowed — when a book is borrowed by a user.
    // 2. Reserved — when a book is reserved by a user.
    // 3. Available — when a book is available to borrow or reserve.
    // 4. Expected soon — when a book is not available now, but a user can reserve it.
    // 5. Overdue — when a book was borrowed by a user but still not returned.
    oneof book_status {
        bool borrowed = 6;
        bool reserved = 7;
        bool available = 8;
        bool expected_soon = 9;
        bool overdue = 10;
    }
}

// Information about a loan of a book.
//
// Contains an inventory item,
// users who borrowed a book and their taken on and due on dates.
//
message LoanDetails {

    // The identifier of a book.
    InventoryItemId inventory_item_id = 1;

    // Represented by a user's email address.
    UserId user_id = 2;

    // The time when the book was borrowed.
    google.protobuf.Timestamp when_taken = 3;

    // The time when the book should be returned.
    google.protobuf.Timestamp when_due = 4;
}

// The detailed information about an inventory.
//
// Contains a book title, authors, and a book location.
//
message InventoryDetails {

    // The book title.
    BookTitle book_title = 1;

    // Authors’ full names.
    AuthorName author_names = 2;

    // A list of information about a location of books.
    repeated InventoryItemLocation items = 3;
}

// Information about a book location.
//
message InventoryItemLocation {

    // The location of a book.
    oneof book_location {
        LoanDetails loan = 1;
        bool in_library_inventory = 2;
        bool lost = 3;
    }
}

// Information about reservations.
//
message ReservationDetails {

    // Who reserved a book.
    UserId user_id = 1;

    // The time when a user reserved a book.
    google.protobuf.Timestamp made_on = 2;
}

// Information about an inventory item record.
//
message InventoryItemRecord {

    // Represented by a book ID and an item number.
    InventoryItemId inventory_item_id = 1;

    // Represented by a user's email address.
    UserId user_id = 2;

    // One of the actions is assigned to an inventory item.
    oneof book_record {
        bool borrowed = 3;
        bool reserved = 4;
        bool loan_period_extended = 5;
        bool returned = 6;
        bool lost = 7;
    }
    // The time when an action was did.
    google.protobuf.Timestamp action_date = 8;
}

// Information about a history of a loan of a book.
//
// Contains an inventory item,
// users who borrowed the book and their taken on, due on, and returned on dates.
//
message LoanDetailsHistory {

    // The identifier of a book.
    InventoryItemId inventory_item_id = 1;

    // Represented by a user's email address.
    UserId user_id = 2;

    // The time when a book was borrowed.
    google.protobuf.Timestamp when_taken = 3;

    // The time when a book should be returned.
    google.protobuf.Timestamp when_due = 4;

    // The time when a book was returned.
    google.protobuf.Timestamp returned_on = 5;
}

// Informaton about a book that was lost.
//
message LostBook {

    // The identifier of a book that was lost.
    InventoryItemId inventory_item_id = 1;

    // The title of a book that was lost.
    BookTitle book_title = 2;

    // Authors’ full names.
    AuthorName author_names = 3;

    // Who lost a book.
    UserId user_id = 4;

    // The time when was reported about book losing.
    google.protobuf.Timestamp reported_on = 5;
}

// Information about the user.
//
message UserDetails {

    // An identifier of the user.
    UserId user_id = 1;

    // A name of user in the library.
    string username = 2;

    // The count of borrowed by user books now.
    int32 count_of_borrowed_books = 3;

    // The count of reserved by user books now.
    int32 count_of_reserved_books = 4;

    // The count of books that user return with lateness or hasn’t return at all.
    int32 count_of_overdue_books = 5;
}

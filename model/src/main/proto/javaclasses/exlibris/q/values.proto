//
// Copyright 2018, TeamDev Ltd. All rights reserved.
//
// Redistribution and use in source and/or binary forms, with or without
// modification, must retain the above copyright notice and the following
// disclaimer.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//

syntax = "proto3";

package javaclasses.exlibris.q;

import "spine/options.proto";

option (type_url_prefix) = "type.javaclasses.exlibris";
option java_package = "javaclasses.exlibris.q";
option java_outer_classname = "ValuesProjectionsProto";
option java_multiple_files = true;
option java_generate_equals_and_hash = true;

import "spine/net/url.proto";
import "spine/time/time.proto";
import "javaclasses/exlibris/identifiers.proto";
import "javaclasses/exlibris/values.proto";

// All Information about a book from the library.
//
message BookItem {

    // The identifier of a book.
    BookId book_id = 1;

    // The International Standard Book Number.
    Isbn isbn = 2;

    // The book title.
    BookTitle title = 3;

    // Authors’ full names.
    AuthorName authors = 4;

    // The book cover.
    spine.net.Url cover_url = 5;

    // A list of book categories.
    repeated Category categories = 6;

    // The DTO of a book synopsis.
    BookSynopsis synopsis = 7;

    // Number of available books.
    int32 available_count = 8;

    // The book item status.
    BookItemStatus status = 9;
}

// A book item status values.
//
enum BookItemStatus {

    // Used as an undefined value marker.
    BIS_UNDEFINED = 0;

    AVAILABLE = 1;

    EXPECTED = 2;
}

// Al Information about a book that is expected in the library.
//
message ExpectedSoonItem {

    // The identifier of a book.
    BookId book_id = 1;

    // The International Standard Book Number.
    Isbn isbn = 2;

    // The book title.
    BookTitle title = 3;

    // Authors’ full names.
    AuthorName authors = 4;

    // The book cover.
    spine.net.Url cover_url = 5;

    // A list of book categories.
    repeated Category categories = 6;

    // The DTO of a book synopsis.
    BookSynopsis synopsis = 7;

    // The status of a book that is expected soon.
    ExpectedSoonItemStatus status = 10;
}

// A status of the book that is expected soon in the library.
//
enum ExpectedSoonItemStatus {

    // Used as an undefined value marker.
    ESIS_UNDEFINED = 0;

    EXPECTED_SOON = 1;
}

// Al Information about borrowed book.
//
message BorrowedBookItem {

    // The identifier of a loan.
    LoanId loan_id = 1;

    // The identifier of a book.
    BookId book_id = 2;

    // The International Standard Book Number.
    Isbn isbn = 3;

    // The book title.
    BookTitle title = 4;

    // Authors’ full names.
    AuthorName authors = 5;

    // The book cover.
    spine.net.Url cover_url = 6;

    // A list of book categories.
    repeated Category categories = 7;

    // The DTO of a book synopsis.
    BookSynopsis synopsis = 8;

    // The last day of the loan period.
    spine.time.LocalDate due_date = 9;

    // The borrowed book status.
    BorrowedBookItemStatus status = 10;

    // Shows whether there is a reservation for this book or not.
    bool is_allowed_loan_extension = 11;
}

// A borrowed book item status values.
//
enum BorrowedBookItemStatus {

    // Used as an undefined value marker.
    BBIS_UNDEFINED = 0;

    BORROWED = 1;

    OVERDUE = 2;

    SHOULD_RETURN_SOON = 3;
}

// Al Information about reserved book.
//
message ReservedBookItem {

    // The identifier of a book.
    BookId book_id = 1;

    // The International Standard Book Number.
    Isbn isbn = 2;

    // The book title.
    BookTitle title = 3;

    // Authors’ full names.
    AuthorName authors = 4;

    // The book cover.
    spine.net.Url cover_url = 5;

    // A list of book categories.
    repeated Category categories = 6;

    // The DTO of a book synopsis.
    BookSynopsis synopsis = 7;

    // Estimated date when the book becomes available.
    spine.time.LocalDate when_available = 8;

    // The reserved book status.
    ReservedBookItemStatus status = 9;
}

// A borrowed book item status values.
//
enum ReservedBookItemStatus {

    // Used as an undefined value marker.
    RBIS_UNDEFINED = 0;

    READY_TO_PICK_UP = 1;

    RESERVED = 2;
}

// An inventoty item status values.
//
enum InventoryItemStatus {

    // Used as an undefined value marker.
    IIS_UNDEFINED = 0;

    ITEM_AVAILABLE = 1;

    ITEM_BORROWED = 2;

    ITEM_RESERVED = 3;
}


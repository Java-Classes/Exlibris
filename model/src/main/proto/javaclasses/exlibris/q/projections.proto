//
// Copyright 2018, TeamDev Ltd. All rights reserved.
//
// Redistribution and use in source and/or binary forms, with or without
// modification, must retain the above copyright notice and the following
// disclaimer.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//

syntax = "proto3";

package javaclasses.exlibris.q;

import "spine/options.proto";

option (type_url_prefix) = "type.javaclasses.exlibris";
option java_package = "javaclasses.exlibris.q";
option java_outer_classname = "ProjectionsProto";
option java_multiple_files = true;
option java_generate_equals_and_hash = true;

import "google/protobuf/timestamp.proto";
import "spine/net/url.proto";
import "javaclasses/exlibris/values.proto";
import "javaclasses/exlibris/model.proto";
import "javaclasses/exlibris/identifiers.proto";
import "javaclasses/exlibris/q/values.proto";

// Appears after click on the book cover like pop-up dialog.
//
message BookDetailsView {

    // Short book information.
    BookItem book_item = 1;

    // The full book description.
    BookDescription book_description = 2;
}

// The view with the list of categories.
//
message CategoriesView {

    // The list of categories.
    repeated Category categories = 1;
}

// View with compact information about book loans.
//
// Librarian sees all user’s loan periods.
//
message BookCompactHistory {

    // An identifier of the inventory.
    InventoryId inventory_id = 1;

    // List of user's loan details.
    repeated LoanDetails loans = 2;
}

// The view with full information about book records.
//
// Librarian sees all users that borrow the book,
// reserve, lost, return, or extend loan period with date of every record.
//
message BookFullHistory {

    // An identifier of the inventory.
    InventoryId inventory_id = 1;

    // The list of the inventory item record.
    repeated InventoryItemRecord inventory_item_record = 2;
}

// An extend information about the book.
//
// The view consists of all information about the book:
// URL cover, book title, authors, ISBN, year of publication,
// categories, and description.
//
message BookExtendedView {

    // A book identifier.
    BookId book_id = 1;

    // URL for the book cover.
    spine.net.Url book_cover_url = 2;

    // The book title.
    BookTitle title = 3;

    // The list of author’s names.
    repeated AuthorName author_names = 4;

    // Value that generated from ISBN.
    Isbn62 isbn = 5;

    // Year of the publication of the book.
    Year year = 6;

    // List of categories.
    repeated Category categories = 7;

    // Full book description.
    BookDescription book_desctiption = 8;
}

// Inventory state of the current book.
//
message InventoryByBookView {

    // Information about book loan.
    InventoryDetails inventory_details = 1;
}

// View with information about the inventory.
//
// View consists of fields with the book title, authors,
// available books, and amount of the overdue books.
//
message InventoryView {

    // The list of inventory details.
    repeated InventoryDetails inventory_details = 1;
}

// The wiew with information about lost books.
//
message LostBookView {

    // The list of all books that were lost.
    repeated LostBook lost_books = 1;
}

// All current users and their summary.
//
message ReadersView {

    // The list of the concrete user’s summary.
    repeated UserDetails user_details = 1;
}

// Information about the user.
//
message UserDetails {

    // An identifier of the user.
    UserId user_id = 1;

    // A name of user in the library.
    string username = 2;

    // The count of borrowed by user books now.
    int32 count_of_borrowed_books = 3;

    // The count of reserved by user books now.
    int32 count_of_reserved_books = 4;

    // The count of books that user return with lateness or hasn’t return at all.
    int32 count_of_overdue_books = 5;
}

// Contains the information about all reservations of the current book.
//
message ReservationView {

    // An identifier of the inventory.
    InventoryId inventory_id = 1;

    // The details of the reservation.
    ReservationDetails reservation_details = 2;
}

// Full user’s history includes all user’s events.
//
// Events:
//
// 1. Borrowed.
// 2. Reserved.
// 3. Loan period extended.
// 4. Returned.
// 5. Lost.
//
message ExtendedUserHistoryView {

    // An identifier of the user.
    UserId user_id = 1;

    // Collection of all user’s actions.
    repeated InventoryItemRecord inventory_item_record = 2;
}

// Compact version of the user history.
//
// Contains all user's loans.
//
message CompactUserHistoryView {

    // Details consist of taken on date, due on date, returned on date.
    repeated LoanDetailsHistory loan_details = 1;
}

// The view that consist of the book cover.
//
message CoverView {

    // A book identifier.
    BookId book_id = 1;

    // URL for the book cover.
    spine.net.Url book_cover_url = 2;
}

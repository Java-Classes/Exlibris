//
// Copyright 2018, TeamDev Ltd. All rights reserved.
//
// Redistribution and use in source and/or binary forms, with or without
// modification, must retain the above copyright notice and the following
// disclaimer.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//

syntax = "proto3";

package javaclasses.exlibris;

import "spine/options.proto";
import "javaclasses/exlibris/values.proto";

option (type_url_prefix) = "type.javaclasses.exlibris";
option java_package = "javaclasses.exlibris";
option java_outer_classname = "ModelProto";
option java_multiple_files = true;
option java_generate_equals_and_hash = true;

import "google/protobuf/timestamp.proto";
import "javaclasses/exlibris/identifiers.proto";

// `Book` aggregate.
//
message Book {

    // The identifier of a book.
    BookId book_id = 1;

    // Book details.
    BookDetails book_details = 2;
}

// `Inventory` aggregate.
//
message Inventory {

    // The identifier of a inventory.
    InventoryId inventory_id = 1;

    // The identifier of a book.
    BookId book_id = 2;

    // A list of inventory items.
    repeated InventoryItem inventory_items = 3;

    // A list of reservations for items.
    //
    // If reservations are absent the list is empty.
    repeated Reservation reservations = 4;

    // A list of loans for items.
    repeated LoanId loans = 5;
}

// State for `InventoryItem`.
//
message InventoryItem {

    // The identifier for the concrete item.
    InventoryItemId inventory_item_id = 1;

    // Item could have one of the following statuses.
    oneof item_status {

        // When the book stays in a library.
        bool in_library = 2;

        // When the book is borrowed by smb.
        bool borrowed = 3;

        // When the book is lost.
        bool lost = 4;
    }

    // The user who is related to the book.
    //
    // Defines a `lost` or `borrowed` book.
    UserId user_id = 5;
}

// State for `Reservation` of the book.
//
message Reservation {

    // The identifier of a book.
    BookId book_id = 1;

    // The user who reserved a book.
    UserId who_reserved = 2;

    // The time when a book was reserved.
    google.protobuf.Timestamp when_created = 3;
}

// State for `Loan` of the book.
//
message Loan {

    // The identifier of a loan period.
    LoanId loan_id = 1;

    // The specific item.
    InventoryItemId inventory_item_id = 2;

    // The user who borrowed a book.
    UserId who_borrowed = 3;

    // The time when a book was borrowed.
    google.protobuf.Timestamp when_taken = 4;

    // The time when a book should be returned.
    google.protobuf.Timestamp when_due = 5;
}

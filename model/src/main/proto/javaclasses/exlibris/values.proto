//
// Copyright 2018, TeamDev Ltd. All rights reserved.
//
// Redistribution and use in source and/or binary forms, with or without
// modification, must retain the above copyright notice and the following
// disclaimer.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//

syntax = "proto3";

package javaclasses.exlibris;

import "spine/options.proto";

option (type_url_prefix) = "type.javaclasses.exlibris";
option java_package = "javaclasses.exlibris";
option java_outer_classname = "ValuesProto";
option java_multiple_files = true;
option java_generate_equals_and_hash = true;

import "spine/net/url.proto";
import "spine/people/person_name.proto";

// The identifier that contains the ISBN with the base62 algorithm.
//
// The ISBN is the unique code provided by the publisher.
// This code has ten or thirteen symbols.
//
//
// To increase readability the code is converted from decimal format to code with base62.
// Base62 is based on the use of numbers and letters in the upper and lower cases.
//
message Isbn62 {

    // Value that generated from decimal ISBN.
    //
    // Example:
    // Original ISBN in decimal notation:    9780134685991,
    // Generated ISBN62 in base62 notation:  2mBSCRqZ.
    string value = 1 [(required) = true];
}

// The information about a book.
//
message BookDetails {

    // The International Standard Book Number.
    Isbn isbn = 1 [(required) = true];

    // The URL of a book cover.
    spine.net.Url book_cover_url = 2;

    // The DTO of a book title.
    BookTitle title = 3 [(required) = true];

    // Authors' names.
    AuthorName author = 4 [(required) = true];

    // The DTO of a book synopsis.
    BookSynopsis synopsis = 5;

    // A list of book categories.
    repeated Category categories = 6;
}

// The URL of a book cover.
//
message BookCoverURL {

    // The link to the image storage place.
    string value = 1 [(required) = true];
}

// The URL of a QR code image.
//
message QRcodeURL {

    // The link to the QR-code storage place.
    string value = 1 [(required) = true];
}

// The book title.
//
message BookTitle {

    // The book title and the book subtitle concatenation.
    string title = 1 [(required) = true];
}

// The list of authors' names.
//
message AuthorName {

    // The list of authors' names.
    repeated spine.people.PersonName author_name = 1 [(required) = true];
}

// The synopsis is a brief summary of a book.
//
message BookSynopsis {

    // Book synopsis.
    string book_synopsis = 1 [(required) = true];
}

// The tag that is used to classify a book.
//
// For example, the book could have one of the following categories:
// android, cloud technologies, management, code quality, CQRS, etc.
//
message Category {

    // The name of a category.
    string value = 1 [(required) = true];
}

// The radio-frequency identification mark of a book.
//
message Rfid {

    // Contains the numeric code for simplifying reading.
    string value = 1 [(required) = true];
}

// The book publication year.
message Year {

    // The book publication year.
    int32 year = 1;
}

// Reasons to write the book off.
//
message WriteOffReason {

    // Reasons for the librarian to write a book off.
    oneof write_off_reason {
        bool lost = 1;
        bool outdated = 2;
        string custom_reason = 3;
    }
}

// The information about a book.
//
message BookDetailsChange {

    // The previous information about a book.
    BookDetails previous_book_details = 1 [(required) = true];

    // The updated information about a book.
    BookDetails new_book_details = 2 [(required) = true];
}

//The International Standard Book Number.
//
message Isbn {

    // The string value that contains an ISBN.
    string value = 1 [(required) = true];
}

// A book item loan status values.
//
enum LoanStatus {

    // Used as an undefined value marker.
    LOAN_UNDEFINED = 0;

    LOAN_RECENT = 1;

    LOAN_OVERDUE = 2;

    LOAN_SOULD_RETURN_SOON = 3;
}
